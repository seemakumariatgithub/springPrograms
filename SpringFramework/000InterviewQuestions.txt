1. Difference Between BeanFactory and ApplicationContext
    BeanFactory VS  ApplicationContext

1. BeanFactory is a fundamental container that provides the basic functionality for managing beans.	
    ApplicationContext is an advanced container that extends the BeanFactory that provides all basic functionality and adds some advanced features.
2. BeanFactory is suitable to build standalone applications.	
    ApplicationContext is suitable to build Web applications, integration with AOP modules, ORM and distributed applications.
3. BeanFactory supports only Singleton and Prototype bean scopes.	
    ApplicationContext supports all types of bean scopes such as Singleton, Prototype, Request, Session etc.
4. BeanFactory does not support Annotations. In Bean Autowiring, we need to configure the properties in XML file only.	
    ApplicationContext supports Annotation based configuration in Bean Autowiring.
5. BeanFactory interface does not provides messaging (i18n or internationalization) functionality.	
  ApplicationContext interface extends MessageSource interface, thus it provides messaging (i18n or internationalization) functionality.
6. BeanFactory does not support Event publication functionality.	
    Event handling in the ApplicationContext is provided through the ApplicationEvent class and ApplicationListener interface.
7. In BeanFactory, we need to manually register BeanPostProcessors and BeanFactoryPostProcessors.	
  The ApplicationContext automatically registers BeanFactoryPostProcessor and BeanPostProcessor at startup.
8. BeanFactory will create a bean object when the getBean() method is called thus making it Lazy initialization.	
    ApplicationContext loads all the beans and creates objects at the time of startup only thus making it Eager initialization.
9. BeanFactory interface provides basic features only thus requires less memory. 
        For standalone applications where the basic features are enough and when memory consumption is critical, we can use BeanFactory.
  ApplicationContext provides all the basic features and advanced features, including several that are geared towards enterprise applications thus requires more memory.
